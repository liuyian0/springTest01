一、开启注解配置
需要在配置文件中开启Spring注解扫描
根据指定的包名，加载类中配置的注解项
<context:component-scan base-package="packageName"/>
注解格式和XML配置格式，差别仅仅是数据读取方式不同，从加载效率上来说注解优于XML配置文件
二、使用@Component注解装配bean
@Component   相当于在xml中配置：<bean id="" class="">
三、衍生注解
在@Component注解下衍生了@Controller、@Service、@Repository三个注解
@Controller：一般用于表现层的注解
@Service：一般用于业务层的注解
@Repository：一般用于持久层的注解
四、属性注入
使用@Autowired或@Qualifier实现引用类型属性注入
格式：
public class ClassName{
1.@Autowired
private 引用类型 对象名；
}
- 作用：按照类型注入引用类型对象
  - 当容器中只有一个类型匹配的对象时直接注入
  - 当有多个类型匹配的对象时，使用要注入的对象的变量名称作为bean的id，在spring容器查找，找到了也可以注入成功，找不到就报错。
- 细节：当使用注解注入属性时，可以省略setter方法
例：使用@Autowired向业务类中注入dao对象
@Autowired注解的属性：
required通常不写
取值：默认true（必定注入成功，失败报错）false（可以不成功）
2.@Qualifier格式
public class ClassName{
    @Autowired
    @Qualifier("beanId")
    private 引用类型 对象名;
}
在自动按照类型注入(@Autowired)的基础之上，再按照bean的id注入
3.使用@Value实现非引用类型(基本类型、String类、包装类，可以读取properti文件中的属性值，支持EL表达式)属性注入
例如：
public class ClassName{
@Value("100")
private int num;
@Value("zhangsan")
private String name;
}